class Solution {
public:
    bool isSafe(vector<vector<char>>& board, int r, int c, char ch){
        for(int i=0;i<9;i++){
            if(board[r][i]==ch) return false;
            if(board[i][c]==ch) return false;
            if(board[3*(r/3)+i/3][3*(c/3)+i%3]==ch) return false;
        }
        return true;
    }
    bool solve(vector<vector<char>>& board){
        for(int r=0;r<9;r++){
            for(int c=0;c<9;c++){
                if(board[r][c]=='.'){
                    for(int i=0;i<9;i++){
                        char ch='1'+i;
                        if(isSafe(board,r,c,ch)){
                            board[r][c]=ch;
                            if(solve(board)) return true;
                            else board[r][c]='.';
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};
