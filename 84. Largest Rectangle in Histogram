class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        stack<int> s;
        int i=0;
        int area = 0, max_area=0;
        while(i<n){
            if(s.empty()) s.push(i++);
            else if(heights[i]>=heights[s.top()]){
                s.push(i++);
            }
            else{
                int tp=s.top();
                s.pop();
                int height = heights[tp];
                int width = s.empty()?i:i-s.top()-1;
                area = height*width;
                max_area = max(max_area,area);
            }
        }
        
        while(!s.empty()){
            int tp=s.top();
            s.pop();
            int height = heights[tp];
            int width = s.empty()?i:i-s.top()-1;
            area = height*width;
            max_area = max(max_area,area);
        }
        
        return max_area;
    }
};
